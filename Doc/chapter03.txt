第03章 CSS基础知识

3.1 CSS单位
	3.1.1 绝对单位
		绝对单位一般多用于传统平面印刷，而极少用于前端开发。
		cm（厘米）、mm（毫米）、in（英寸）、pt（磅）、pc（pica，1pc=12pt）
	3.1.2 相对单位
		1. px
			所有浏览器默认的font-size值都是16px。
		2. %
			在CSS中，支持百分比作为单位的属性很多，大致可以分为三大类：
			(1) width、height、font-size的百分比是相对于父元素“相同属性”的值来计算的。
			(2) line-height的百分比是相对于父元素的font-size值来计算的。
			(3) vertical-align的百分比是相对当前元素的line-height值来计算的。
		3. em
			em是相对于“当前元素”的字体大小而言的，1em等于“当前元素”字体大小。
			在CSS中，使用em作为单位的三个小技巧：
			(1) 首行缩进使用text-indent:2em实现
			(2) 使用em作为统一单位
				首先在CSS中声明“body{font-size:62.5%}”,通过这个声明使得默认字体大小变为16px*62.5%=10px。方便计算其他大小，只需要将原来的px值除以10，然后换上em作为单位就行了。
			(3) 使用em作为字体大小单位
				比使用px可扩展性更好，在跨平台网站开发中有着明显的优势。
			在实际开发中，对于em，我们一般需要计算两次：第一次，当前元素font-size属性的px值；第二次，当前元素其他属性的px值。
		4. rem（1rem等于“根元素”字体大小）
			rem，全称font size of the root element，指的是相对于根元素（即html元素）的字体大小。
			IE8及以前版本不支持rem。具体支持情况：http://caniuse.com/#search=rem
		在国外大部分主流网站都是使用em作为单位，而且W3C也建议我们使用em作为单位。但是我们发现国内大多数网站，都是采用px作为单位。这是为什么呢？原来在国外，特别是美国，有一些法律规定网站要具有适应性。而国内主要是为了兼容低版本的IE。

3.2 CSS特性
	3.2.1 继承性
		并不是所有属性都具有继承性，如padding、margin、border等就不具备继承性。
		在CSS中，具有继承性的属性有三大来：
		(1) 文本相关属性：
			font-family、font-size、font-style、font-weight、font、line-height、text-align、text-indent、word-spacing。
		(2) 列表相关属性：
			list-style-image、list-style-position、list-style-type、list-style。
		(3) 颜色相关属性：
			color。
		a标签本身有默认的颜色样式，优先级比继承的要高。
	3.2.2 层叠性
		CSS（Cascading Style Sheet层叠样式表）的层叠性，指的是样式的覆盖。
		当样式符合元素相同，属性相同，权重相同三个条件，按照“后来者居上”原则。

3.3 CSS优先级
	样式覆盖发生冲突常见的共有一下五种情况：
	3.3.1 引用样式冲突
		行内样式 > (内部样式 = 外部样式)
	3.3.2 继承方式冲突
		最近的祖先元素获胜
	3.3.3 指定样式冲突
		行内样式 > id选择器 > class选择器 > 元素选择器
		选择器权重：
			通配符-0
			伪元素、元素选择器-1
			class选择器、伪类、属性选择器-10
			id选择器-100
			行内样式-1000
	3.3.4 继承样式和指定样式冲突
		继承样式和指定样式冲突时，指定样式获胜。
	3.3.5 !important
		!important会覆盖CSS中任何的其他样式声明。
		同一样式中出现多个!important，则遵循后来者居上原则。
		
3.4 CSS引入方式
	3.4.1 外部样式表
	3.4.2 内部样式表
	3.4.3 行内样式表
	外部样式表多用于共有样式，内部样式表多用于私有样式，而行内样式表更多用于小修改或者优先级方面。
	除了这三种方式，在CSS中其实还有一种@import方式（即“导入样式表”）。@import和外部样式表很相似，但是@import方式先加载HTML后加载CSS，页面用户体验非常差，因此不用。
	
3.5 CSS选择器
	3.5.1 后代选择器
		M N{}
	3.5.2 子代选择器
		M>N{}
	3.5.3 兄弟选择器
		M~N{}
		选中元素后面（不包括前面）“所有”的某一类兄弟元素。
	3.5.4 相邻选择器
		M+N{}
		选中元素后面（不包括前面）“相邻”的某一个兄弟元素。
		li+li{border-top：2px solid red}，可以实现在两个li元素之间添加一条边框的效果。