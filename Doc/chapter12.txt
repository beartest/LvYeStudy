第12章 性能优化

12.1 CSS性能优化简介

12.2 属性缩写
	12.2.1 盒模型缩写
		border，padding，margin。
	12.2.2 背景缩写
		CSS背景属性background-color，backgroud-image,backgroud-repeat,backgroud-attachment（背景图片是固定还是滚动）,backgroud-position。
	12.2.3 字体缩写
		字体的简写形式中，font-size值和line-height值之间是需要加入斜杠“/”的。例如：font:"微软雅黑" 12px/1.5em bold;
	12.2.4 颜色值缩写
	
12.3 语法压缩
	12.3.1 空白符
		纵向书写（带空格和换行）代码方便阅读，横向书写则可以节省不少字符数。整站发布的时候，再使用工具压缩成横向书写。
	12.3.2 结尾分号
		最后一个属性之后的结尾分号是不必要的。
	12.3.3 url的引号
		像backgroud-image、cursor等属性url()中的路径不需要添加引号。
	12.3.4 属性值为0
		属性取值为0，则这个属性不需要添加单位。
	12.3.5 属性值为以0开头的小数
		属性值是以0开头的小数时，我们可以把开头的0去掉。
	12.3.6 合并相同的定义
		可以使用群组选择器来合并相同的样式，从而达到代码重用和精简代码的目的。
	12.3.7 利用继承进行合并
		如果父元素的多个子元素都定义了相同的可继承属性，我们可以把这些相同的属性定义在父元素上，从而精简代码。

12.4 压缩工具
	CSS Compressor 网址：https://csscompressor.com
	YUI Compressor 网址：http://tool.oschina.net/jscompress

12.5 图片压缩
	在线图片压缩工具：
		JPEGmini 网址：http://www.jpegmini.com
		TinyPNG 网址：https://tinypng.com
	本地软件：
		ImageOptim

12.6 高性能的选择器
	浏览器对选择器规则是从右到左进行解析的。
	谷歌资深Web开发工程师Steye Souders对CSS选择器的匹配效率从高到低做了一个排序：
		(1) id选择器
		(2) class选择器
		(3) 元素选择器
		(4) 相邻选择器
		(5) 子选择器
		(6) 后代选择器
		(7) 通配符选择器
		(8) 属性选择器
		(9) 伪类选择器
	更好地使用高性能的选择器，需要注意一下四个技巧：
		(1) 不要使用通配符
		(2) 不要在id选择器以及class选择器前添加元素名
		(3) 选择器最好不要超过三层，位置靠右的选择条件尽可能精确
		(4) 避免使用后代选择器，尽量少用子选择器
	
	